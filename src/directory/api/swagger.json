{
  "openapi": "3.0.0",
  "paths": {
    "/contexts": {
      "post": {
        "operationId": "create",
        "summary": "",
        "description": "Create a new context",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContextsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Context created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextDto"
                }
              }
            }
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin"
          },
          "409": {
            "content": {
              "application/json": {
                "examples": {
                  "DuplicatedContextException": {
                    "description": "Context slug already exists for tenant tenantId.",
                    "value": {
                      "statusCode": 409,
                      "message": "Context slug already exists for tenant tenantId.",
                      "error": "Conflict"
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Context slug already exists for tenant tenantId."
                    },
                    "error": {
                      "type": "string",
                      "example": "Conflict"
                    }
                  },
                  "required": [
                    "statusCode",
                    "message"
                  ]
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "Contexts"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "listAll",
        "summary": "",
        "description": "Returns all contexts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns all contexts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContextDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin, admin"
          }
        },
        "tags": [
          "Contexts"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/contexts/{id}": {
      "patch": {
        "operationId": "update",
        "summary": "",
        "description": "Update a context by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContextsDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin"
          },
          "404": {
            "description": "Not found context to update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DuplicatedContextException"
                }
              }
            }
          }
        },
        "tags": [
          "Contexts"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "delete",
        "summary": "",
        "description": "Delete a context by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin"
          }
        },
        "tags": [
          "Contexts"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/data-types": {
      "post": {
        "operationId": "create",
        "summary": "",
        "description": "Create a new data type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataTypesDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataTypesDto"
                }
              }
            }
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin, admin"
          }
        },
        "tags": [
          "Data Types"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/data-types/{tenantId}": {
      "get": {
        "operationId": "listBy",
        "summary": "",
        "description": "Get all data types for a tenant",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataTypesDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin, admin"
          }
        },
        "tags": [
          "Data Types"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/data-types/{tenantId}/{dataTypeId}": {
      "patch": {
        "operationId": "update",
        "summary": "",
        "description": "Updates a data type by tenant and data type id",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataTypeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDataTypesDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin, admin"
          }
        },
        "tags": [
          "Data Types"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-params": {
      "post": {
        "operationId": "create",
        "summary": "",
        "description": "Create a new tenant params",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantParamsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantParamsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Integration API key or JWT required"
          }
        },
        "tags": [
          "Tenant Params"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-params/{tenantId}": {
      "get": {
        "operationId": "listBy",
        "summary": "",
        "description": "Get all tenant param by tenant",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantParamsDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Params"
        ]
      }
    },
    "/tenant-params/{tenantId}/{contextId}": {
      "get": {
        "operationId": "listByContext",
        "summary": "",
        "description": "Get all tenant param by tenant and context",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantParamsDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tenant Params"
        ]
      }
    },
    "/tenant-params/{tenantId}/{tenantParamsId}": {
      "patch": {
        "operationId": "update",
        "summary": "",
        "description": "Updates a tenant params",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantParamsId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantParamsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized - Integration API key or JWT required"
          }
        },
        "tags": [
          "Tenant Params"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-contexts": {
      "post": {
        "operationId": "create",
        "summary": "",
        "description": "Create a new context for a tenant",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContextsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantContextsDto"
                }
              }
            }
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin, admin"
          }
        },
        "tags": [
          "Tenant Contexts"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-contexts/{tenantId}": {
      "get": {
        "operationId": "listBy",
        "summary": "",
        "description": "Returns all contexts for a tenant",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantContextsDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin, admin"
          }
        },
        "tags": [
          "Tenant Contexts"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-contexts/{tenantId}/{contextId}": {
      "delete": {
        "operationId": "delete",
        "summary": "",
        "description": "Delete a context by tenant and context id",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contextId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin, admin"
          }
        },
        "tags": [
          "Tenant Contexts"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-contexts/activate-signup/{tenantId}": {
      "get": {
        "operationId": "activateSignup",
        "summary": "",
        "description": "Activate signup for a tenant",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin, admin"
          }
        },
        "tags": [
          "Tenant Contexts"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/tenant-contexts/deactivate-signup/{tenantId}": {
      "get": {
        "operationId": "deactivateSignup",
        "summary": "",
        "description": "Deactivate signup for a tenant",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "401": {
            "description": "Need user with one of these roles: superAdmin, admin"
          }
        },
        "tags": [
          "Tenant Contexts"
        ],
        "security": [
          {
            "x-w3block-api-key": []
          },
          {
            "x-w3block-id": []
          },
          {
            "x-w3block-secret": []
          },
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Directory",
    "description": "",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      },
      "x-w3block-api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-w3block-api-key",
        "description": "W3block API key"
      },
      "x-w3block-id": {
        "type": "apiKey",
        "in": "header",
        "name": "x-w3block-id",
        "description": "W3block API ID"
      },
      "x-w3block-secret": {
        "type": "apiKey",
        "in": "header",
        "name": "x-w3block-secret",
        "description": "W3block API Secret"
      }
    },
    "schemas": {
      "CreateContextsDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "contextId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "tenantId",
          "contextId"
        ]
      },
      "ContextDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "description",
          "slug"
        ]
      },
      "UpdateContextsDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "slug"
        ]
      },
      "DuplicatedContextException": {
        "type": "object",
        "properties": {}
      },
      "CreateDataTypesDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "file",
              "url",
              "cpf",
              "phone",
              "text",
              "email"
            ]
          }
        },
        "required": [
          "tenantId",
          "description",
          "label",
          "type"
        ]
      },
      "DataTypesEnum": {
        "type": "string",
        "enum": [
          "file",
          "url",
          "cpf",
          "phone",
          "text",
          "email"
        ]
      },
      "DataTypesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "example": "cpf",
            "$ref": "#/components/schemas/DataTypesEnum"
          },
          "enabled": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "tenantId",
          "label",
          "description",
          "type",
          "enabled"
        ]
      },
      "UpdateDataTypesDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "CreateTenantParamsDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "contextId": {
            "type": "string",
            "format": "uuid"
          },
          "dataTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "order": {
            "type": "number"
          },
          "mandatory": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "tenantId",
          "contextId",
          "dataTypeId",
          "order"
        ]
      },
      "TenantParamsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "contextId": {
            "type": "string"
          },
          "dataTypeId": {
            "type": "string"
          },
          "dataTypes": {
            "$ref": "#/components/schemas/DataTypesDto"
          },
          "order": {
            "type": "number"
          },
          "mandatory": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "tenantId",
          "contextId",
          "dataTypeId",
          "order",
          "mandatory",
          "enabled"
        ]
      },
      "UpdateTenantParamsDto": {
        "type": "object",
        "properties": {
          "order": {
            "type": "number"
          },
          "mandatory": {
            "type": "boolean",
            "default": true
          },
          "enabled": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "order"
        ]
      },
      "TenantContextsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "contextId": {
            "type": "string"
          },
          "context": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ContextDto"
              }
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "tenantId",
          "contextId"
        ]
      }
    }
  }
}